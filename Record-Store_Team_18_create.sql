CREATE TABLE LOCATION
(
  PhoneNumber INT NOT NULL,
  Address VARCHAR(50) NOT NULL,
  LocationName VARCHAR(25) NOT NULL,
  LocationID INT NOT NULL,
  PRIMARY KEY (LocationID)
);

CREATE TABLE EMPLOYEE
(
  EmployeeID INT NOT NULL,
  EmployeeName VARCHAR(30) NOT NULL,
  LocationID INT NOT NULL,
  PRIMARY KEY (EmployeeID),
  FOREIGN KEY (LocationID) REFERENCES LOCATION(LocationID)
);

CREATE TABLE ALBUM
(
  AlbumID INT NOT NULL,
  AlbumTitle VARCHAR(30) NOT NULL,
  ReleaseDate DATE NOT NULL,
  Cost FLOAT NOT NULL,
  PRIMARY KEY (AlbumID)
);

CREATE TABLE SONG
(
  SongID INT NOT NULL,
  SongTitle VARCHAR(30) NOT NULL,
  Duration INT NOT NULL,
  Lyrics VARCHAR(3000) NOT NULL,
  AlbumID INT NOT NULL,
  PRIMARY KEY (SongID),
  FOREIGN KEY (AlbumID) REFERENCES ALBUM(AlbumID)
);

CREATE TABLE GENRE
(
  Description VARCHAR(200) NOT NULL,
  GenreName VARCHAR(15) NOT NULL,
  PRIMARY KEY (GenreName)
);

CREATE TABLE ARTIST
(
  ArtistID INT NOT NULL,
  StageName VARCHAR(30) NOT NULL,
  DateOfBirth DATE NOT NULL,
  ArtistName VARCHAR(30) NOT NULL,
  PRIMARY KEY (ArtistID)
);

CREATE TABLE SONG_GENRE_LIST
(
  SongID INT NOT NULL,
  GenreName VARCHAR(15) NOT NULL,
  PRIMARY KEY (SongID, GenreName),
  FOREIGN KEY (SongID) REFERENCES SONG(SongID),
  FOREIGN KEY (GenreName) REFERENCES GENRE(GenreName)
);

CREATE TABLE INVENTORY
(
  Amount INT NOT NULL,
  AlbumID INT NOT NULL,
  LocationID INT NOT NULL,
  PRIMARY KEY (AlbumID, LocationID),
  FOREIGN KEY (AlbumID) REFERENCES ALBUM(AlbumID),
  FOREIGN KEY (LocationID) REFERENCES LOCATION(LocationID)
);

CREATE TABLE SONG_FEATURE_LIST
(
  SongID INT NOT NULL,
  ArtistID INT NOT NULL,
  PRIMARY KEY (SongID, ArtistID),
  FOREIGN KEY (SongID) REFERENCES SONG(SongID),
  FOREIGN KEY (ArtistID) REFERENCES ARTIST(ArtistID)
);